{
	"name": "NYCTaxi",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "Spark1",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1"
			},
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/bec5c75d-1101-4128-ba7e-ea39271d5801/resourceGroups/cloud-shell-storage-southeastasia/providers/Microsoft.Synapse/workspaces/acwerkspace/bigDataPools/Spark1",
				"name": "Spark1",
				"type": "Spark",
				"endpoint": "https://acwerkspace.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/Spark1",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "2.4",
				"nodeCount": 10,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "python"
					},
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": true
					},
					"collapsed": false
				},
				"source": [
					"%%pyspark\r\n",
					"from azureml.opendatasets import NycTlcYellow\r\n",
					"\r\n",
					"data = NycTlcYellow()\r\n",
					"df = data.to_spark_dataframe()\r\n",
					"# Display 10 rows\r\n",
					"# display(df.limit(10))"
				],
				"execution_count": 2
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": true
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"spark.sql(\"CREATE DATABASE IF NOT EXISTS nyctaxi\")\r\n",
					"df.write.mode(\"overwrite\").saveAsTable(\"nyctaxi.trip\")"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					},
					"collapsed": true
				},
				"source": [
					"%%pyspark\r\n",
					"df = spark.sql(\"\"\"\r\n",
					"   SELECT PassengerCount,\r\n",
					"       SUM(TripDistance) as SumTripDistance,\r\n",
					"       AVG(TripDistance) as AvgTripDistance\r\n",
					"   FROM nyctaxi.trip\r\n",
					"   WHERE TripDistance > 0 AND PassengerCount > 0\r\n",
					"   GROUP BY PassengerCount\r\n",
					"   ORDER BY PassengerCount\r\n",
					"\"\"\") \r\n",
					"display(df)\r\n",
					"df.write.saveAsTable(\"nyctaxi.passengercountstats\")"
				],
				"execution_count": null
			}
		]
	}
}